#!@GUILE@ \
--no-auto-compile -e main -s
!#

;; Random Telephone Number - generates a random Ofcom drama number.
;; Copyright (C) 2022  James Crake-Merani
;;
;; This program is free software: you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.
;;
;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.
;;
;; You should have received a copy of the GNU General Public License
;; along with this program.  If not, see <https://www.gnu.org/licenses/>.

(use-modules (random-telno common)
             (ice-9 getopt-long))

(define (main args)
  (set! *random-state* (random-state-from-platform))
  (catch #t (lambda ()
              (let* ((option-spec '((amount (single-char #\a) (value #t))
                                    (area (value #t))))
                     (options (getopt-long args option-spec))
                     (amount (option-ref options 'amount "1"))
                     (area-name (option-ref options 'area #f))
                     (area-code (if (or (member area-name all-areas) (not area-name)) area-name (match-areaname area-name))))
                (let ((amount-str (string->number amount)))
                  (if (not amount-str)
                      (begin
                        (display "Amount must be a number.")
                        (newline))
                      (begin
                        (display (string-join (generate-n-phone-numbers (string->number amount) area-code) "\n"))
                        (newline))))))
    (lambda (key . args)
      (cond
       ((equal? key 'invalid-areaname) (display "That area name is invalid.") (newline))
       ((equal? key 'invalid-areacode) (display "The entered area code is invalid.") (newline)))
      )))
